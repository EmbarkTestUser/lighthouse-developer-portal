app:
  title: Embark Developer Portal
  baseUrl: http://internal-a4d95ec490108442a940e05e10d9e3d7-665278146.us-gov-west-1.elb.amazonaws.com

organization:
  name: Embark

backend:
  auth:
    keys:
      - secret: ${GH_TOKEN}
  baseUrl: http://internal-a4d95ec490108442a940e05e10d9e3d7-665278146.us-gov-west-1.elb.amazonaws.com
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: http://internal-a4d95ec490108442a940e05e10d9e3d7-665278146.us-gov-west-1.elb.amazonaws.com
    methods: [GET, POST, PUT, DELETE]
    credentials: true
  cache:
    # TODO: update to use memcache in production  https://backstage.io/docs/overview/architecture-overview#cache
    store: memory
  database:
    client: pg
    connection:
      host: ${DEV_POSTGRES_SERVICE_HOST}
      port: ${DEV_POSTGRES_SERVICE_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
  reading:
    allow:
      # allow reading evss swagger
      - host: www.ebenefits.va.gov

integrations:
  github:
    - host: github.com
      token: ${GH_TOKEN}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

proxy:
  '/test':
    target: 'https://example.com'
    changeOrigin: true
  '/docserver':
    target: ${DOCSERVER_BASE_URL}
    changeOrigin: true
    pathRewrite:
      '^/api/proxy/docserver/': '/docserver/'

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'external' # Alternatives - 'external'
  publisher:
    type: 'awsS3' # Alternatives - 'googleGcs' or 'awsS3' or 'azureBlobStorage' or 'openStackSwift'. Read documentation for using alternatives.
    awsS3:
      bucketName: ${AWS_BUCKET_NAME}
      sse: 'aws:kms'

auth:
  # providers: {}
  # see https://backstage.io/docs/tutorials/quickstart-app-auth to know more about enabling auth providers
  environment: development
  providers:
    github:
      development:
        clientId: ${GH_CLIENT_ID}
        clientSecret: ${GH_CLIENT_SECRET}

scaffolder:
  github:
    token: ${GH_TOKEN}
    visibility: public # or 'internal' or 'private'

catalog:
  processors:
    githubOrg:
      providers:
        - target: https://github.com
          apiBaseUrl: https://api.github.com
    visibility: public # or 'internal' or 'private'
  rules:
    - allow: [Component, System, API, Group, User, Template, Location]
  locations:
    # Scans all repos for catalog-info.yaml in department-of-veterans-affairs
    # - type: github-discovery
    # target: https://github.com/department-of-veterans-affairs/lighthouse-*/blob/-/catalog-info.yaml

    #################### EMBARK #########################

    # Embark
    - type: url
      target: https://github.com/department-of-veterans-affairs/lighthouse-embark/blob/main/catalog-info.yaml

    # app component
    - type: url
      target: https://github.com/department-of-veterans-affairs/lighthouse-embark/blob/main/packages/app/catalog-info.yaml

    # backend component
    - type: url
      target: https://github.com/department-of-veterans-affairs/lighthouse-embark/blob/main/packages/backend/catalog-info.yaml

    # feature-flags component
    - type: url
      target: https://github.com/department-of-veterans-affairs/lighthouse-embark/blob/main/plugins/feature-flag-ui/catalog-info.yaml

    # system
    - type: url
      target: https://github.com/department-of-veterans-affairs/lighthouse-embark/blob/main/catalog-info.yaml
