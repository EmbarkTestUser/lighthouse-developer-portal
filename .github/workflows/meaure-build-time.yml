name: Measure build time

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      elapsed: ${{ steps.build.outputs.elapsed }}
    env:
      SHOULD_DEPLOY: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.5.0
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn install
      - name: Transpile typescript
        run: yarn tsc
      - name: Build
        id: build
        run: | 
          START_TIME=$(date +%s%3N)
          yarn build
          echo ::set-output name=elapsed::$(($(expr $(date +%s%3N) - $START_TIME) / 1000))

      - name: Send build time to datadog
        uses: masci/datadog@v1
        with:
          api-key: ${{ secrets.DATADOG_API_KEY }}
          metrics: |
            - type: "count"
              name: "build.time.count"
              value: ${{ steps.build.outputs.elapsed }}
              host: ${{ github.repository_owner }}
              tags:
                - "project:${{ github.repository }}"
                - "branch:${{ github.head_ref }}"
          
      # - name: Login to Heroku Container registry
      #   if: ${{ env.SHOULD_DEPLOY == 'true' }}
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      #   run: heroku container:login
      # - name: Build and push to Heroku
      #   if: ${{ env.SHOULD_DEPLOY == 'true' }}
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      #   run: heroku container:push web -a lighthouse-backstage
      # - name: Release to Heroku
      #   if: ${{ env.SHOULD_DEPLOY == 'true' }}
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      #   run: heroku container:release web -a lighthouse-backstage
