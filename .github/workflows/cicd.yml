name: CI/CD Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  unit-tests:
    uses: department-of-veterans-affairs/lighthouse-embark/.github/workflows/unit-tests.yml@main
  pre-build-validation:
    needs: [unit-tests]
    uses: department-of-veterans-affairs/lighthouse-embark/.github/workflows/pre-build-validation.yml@main
    with:
      UNIT_TEST_STATUS: ${{ needs.unit-tests.result }}
    secrets:
      SLACK_UID_001: ${{ secrets.SLACK_UID_ABDUSAMAD }}
      SLACK_UID_002: ${{ secrets.SLACK_UID_FOWLER }}
      SLACK_UID_003: ${{ secrets.SLACK_UID_LOVENDAHL }}
      SLACK_UID_004: ${{ secrets.SLACK_UID_LUCKEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}

  build-push-images:
    runs-on: ubuntu-latest
    needs: [pre-build-validation]
    if: | 
      github.ref == 'refs/heads/main' ||
      github.event_name == 'workflow_dispatch'
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        type: [backend, frontend]
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Build and push image
        uses: ./.github/actions/build-push-images
        with:
          type: ${{ matrix.type }}
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: ${{ github.repository_owner }}
          DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}

  deploy-backstage-app:
    runs-on: ubuntu-latest
    needs: [build-push-images]
    if: | 
      github.ref == 'refs/heads/main' ||
      github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        env: [dev]
        include:
          - env: dev
            GH_CLIENT_ID: DEV_GH_CLIENT_ID
            GH_CLIENT_SECRET: DEV_GH_CLIENT_SECRET
            DEPLOY_TO: Development
            URL: http://internal-a4d95ec490108442a940e05e10d9e3d7-665278146.us-gov-west-1.elb.amazonaws.com
    concurrency: ${{ matrix.env }}
    permissions:
      packages: read
      contents: read
    # Need to periodically update K8s context
    steps:
      - uses: actions/checkout@v2
      # - name: Create Deployment
      #   uses: bobheadxi/deployments@v0.6.1
      #   id: deployment
      #   with:
      #     step: start
      #     token: ${{ secrets.DEV_GH_TOKEN }}
      #     env: ${{ matrix.DEPLOY_TO }}
      - name: Deploy app
        uses: ./.github/actions/deploy-backstage-app
        with:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
          DOCKERCONFIGJSON: ${{ secrets.DEV_DOCKERCONFIGJSON }}
          GH_TOKEN: ${{ secrets.DEV_GH_TOKEN }}
          GH_CLIENT_ID: ${{ secrets[matrix.GH_CLIENT_ID] }}
          GH_CLIENT_SECRET: ${{ secrets[matrix.GH_CLIENT_SECRET] }}
          ENV: ${{ matrix.env }}
          POSTGRES_USER: ${{ secrets.DEV_PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DEV_PG_PASSWORD }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
    
  notify-deployment-repo:
    runs-on: ubuntu-latest
    needs: [deploy-backstage-app]
    strategy:
      matrix:
        env: [dev]
        include:
          - env: dev
    # Notify embark-deployment via webhook https://github.com/department-of-veterans-affairs/embark-deployment
    steps:
      - uses: actions/checkout@v2
      - name: Send deployment event via webhook
        uses: ./.github/actions/send-deployment-webhook
        with:
          ENV: ${{ matrix.env }}
          WEBHOOK_DEPLOY_PAT: ${{ secrets.WEBHOOK_DEPLOY_PAT }}
          MAIN_SHA: ${{ github.sha }}
