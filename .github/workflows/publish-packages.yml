name: Publish Packages

on:
  release:
    types: [published, released, edited]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: lighthouse-backstage

jobs:
  build-and-push:
      runs-on: ubuntu-latest
      permissions:
        packages: write
        contents: read
      strategy:
        matrix:
          type: [backend, frontend]

      steps:
        - uses: actions/checkout@v2
        # - name: Set up QEMU
        #   uses: docker/setup-qemu-action@v1
        # - name: Get yarn cache directory path
        #   id: yarn-cache-dir-path
        #   run: echo "::set-output name=dir::$(yarn cache dir)"
        - name: Dump GitHub context
          env:
            GITHUB_CONTEXT: ${{ toJSON(github) }}
          run: echo "$GITHUB_CONTEXT"
        - name: Dump job context
          env:
            JOB_CONTEXT: ${{ toJSON(job) }}
          run: echo "$JOB_CONTEXT"
        - name: Dump steps context
          env:
            STEPS_CONTEXT: ${{ toJSON(steps) }}
          run: echo "$STEPS_CONTEXT"
        - name: Dump runner context
          env:
            RUNNER_CONTEXT: ${{ toJSON(runner) }}
          run: echo "$RUNNER_CONTEXT"
        - name: Set up Docker Buildx
          id: buildx
          uses: docker/setup-buildx-action@v1
        - name: check platforms
          run: echo ${{ steps.buildx.output.platforms }}
        # I don't believe this cache is working properly, the cache size is only 22 Bytes
        - name: Cache Docker layers
          uses: actions/cache@v2
          with:      
            path: |
                **/node_modules
                **/packages/*/node_modules
            key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
        - name: Login to ghcr
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        # We don't really need this step anymore?
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
          with:
            images: ${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        - name: Build and push ${{ matrix.type }} image
          uses: docker/build-push-action@v2
          env:
            IMAGE_REF: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}/${{ matrix.type }}:${{ github.tag_name }}
          with:
            context: .
            file: Dockerfile.${{ matrix.type }}
            push: true
            platforms: linux/amd64
            tags: ${{ env.IMAGE_REF }}
            cache-from: type=gha
            cache-to: type=gha,mode=max
            # For some reason using this doesn't properly add the image manifest to the tagged version of the image
            # so trying to pull the image causes an error
            # cache-from: type=registry,ref=${{ env.IMAGE_REF }}
            # cache-to: type=registry,ref=${{ env.IMAGE_REF }},mode=max
          

    
