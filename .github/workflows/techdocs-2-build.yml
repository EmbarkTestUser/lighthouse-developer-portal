name: techdocs-build

on:
  workflow_dispatch:
    inputs:
      entity_kind:
        description: 'Backstage entity kind'
        required: true
        default: 'Component'
      entity_namespace:
        description: 'Backstage entity namespace'
        required: true
        default: 'default'
      entity_name:
        description: 'Backstage entity name'
        required: true
      techdocs_repo_full_name:
        description: 'Repo to pull TechDocs markdown from'
        required: true

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      ENTITY_NAMESPACE: ${{ github.event.inputs.entity_namespace }}
      ENTITY_KIND: ${{ github.event.inputs.entity_kind }}
      ENTITY_NAME: ${{ github.event.inputs.entity_name }}
      REPO_FULL_NAME: ${{ github.event.inputs.techdocs_repo_full_name }}
    steps:
      - name: Fail if input missing
        if: ${{ !env.ENTITY_NAMESPACE || !env.ENTITY_KIND || !env.ENTITY_NAME || !env.REPO_FULL_NAME }}
        run: >
          echo "Missing required input. Check what's missing:" &&
          echo "ENTITY_NAMESPACE: ${{ env.ENTITY_NAMESPACE }}" &&
          echo "ENTITY_KIND: ${{ env.ENTITY_KIND }}" &&
          echo "ENTITY_NAME: ${{ env.ENTITY_NAME }}" &&
          echo "TECHDOCS_REPO_FULL_NAME: ${{ env.REPO_FULL_NAME }}" &&
          exit 1
      # - name: Fail if repo is not department-of-veterans-affairs
      #  if: ${{ !startsWith(env.REPO_FULL_NAME, 'department-of-veterans-affairs/') }}
      #  run: >
      #    echo "Bad techdocs_repo_full_name. Only department-of-veteran-affairs org repos allowed." &&
      #    exit 1
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: ${{ env.REPO_FULL_NAME }}
      - uses: actions/setup-node@v2
      - uses: actions/setup-python@v2
      - name: setup java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: download, validate, install plantuml and its dependencies
        run: |
          curl -o plantuml.jar -L http://sourceforge.net/projects/plantuml/files/plantuml.1.2021.4.jar/download
          echo "be498123d20eaea95a94b174d770ef94adfdca18  plantuml.jar" | sha1sum -c -
          mv plantuml.jar /opt/plantuml.jar
          mkdir -p "$HOME/.local/bin"
          echo $'#!/bin/sh\n\njava -jar '/opt/plantuml.jar' ${@}' >> "$HOME/.local/bin/plantuml"
          chmod +x "$HOME/.local/bin/plantuml"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          sudo apt-get install -y graphviz
      - name: Install TechDocs cli
        run: sudo npm install -g @techdocs/cli
      - name: Install mkdocs and mkdocs plugins
        run: pip install mkdocs-techdocs-core==0.*
      - name: Generate docs to ./sites
        run: techdocs-cli generate --no-docker
      - name: Publish docs
        run: >
          techdocs-cli publish
          --publisher-type awsS3
          --storage-name ${{ secrets.TECHDOCS_S3_BUCKET_NAME }}
          --entity ${{ env.ENTITY_NAMESPACE }}/$ENTITY_KIND/$ENTITY_NAME
      # TODO: delete
      # - name: Save TechDocs tar as Artifact
      #   id: upload
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: ${{ format('{0}-techdocs-latest', env.ENTITY_NAME) }}
      #     path: ./site
      # - name: Dispatch notify Jenkins workflow
      #   uses: benc-uk/workflow-dispatch@v1
      #   with:
      #     workflow: techdocs-dispatch-publish
      #     token: ${{ secrets.DISPATCH_BUILD_PUBLISH_TECHDOCS_TOKEN }}
      #     inputs: >
      #       {
      #         "run_id": "${{ github.run_id }}",
      #         "entity": "${{ format('{0}/{1}/{2}', env.ENTITY_NAMESPACE, env.ENTITY_KIND, env.ENTITY_NAME) }}"
      #       }
