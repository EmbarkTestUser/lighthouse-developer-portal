# Default values for lighthouse-backstage.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

image:
  repository: ghcr.io/department-of-veterans-affairs/lighthouse-backstage
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "dev"

containers:
  frontend:
    name: http 
    port: 3000
    livenessProbe:
      initialDelaySeconds: 5
      path: /healthcheck
    readinessProbe:
      initialDelaySeconds: 5
      path: /healthcheck
  backend: 
    name: port-2
    port: 7000
    livenessProbe:
      initialDelaySeconds: 5
      path: /healthcheck
    readinessProbe:
      initialDelaySeconds: 5
      path: /healthcheck
  postgres:

imagePullSecrets: []
frontend:
  name: "frontend"
nameOverride: ""
fullnameOverride: ""


secrets:
  DOCKERCONFIGJSON: ${DOCKERCONFIGJSON}
  GITHUB_TOKEN: ${GITHUB_TOKEN}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}
  
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: #{}
  namespace: lighthouse-bandicoot-dev
  

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


service:
  type: ClusterIP
  
virtualService:
  hosts: "dev.devportal.name"
  gateways: istio-system/dev-devportal-name-gateway
  destination:
    frontend:
      port: 8000
    backend:
      port: 7000

ingress:
  enabled: false

resources: 
  limits:
            cpu: "0.5"
            memory: "128Mi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}




