FROM node:14-buster-slim

WORKDIR /app
# Copy repo skeleton first, to avoid unnecessary docker cache invalidation.
# The skeleton contains the package.json of each package in the monorepo,
# and along with yarn.lock and the root package.json, that's enough to run yarn install.
COPY yarn.lock package.json packages/backend/dist/ ./
RUN tar xzf skeleton.tar.gz && rm skeleton.tar.gz

RUN yarn install --frozen-lockfile --production --network-timeout 300000 && rm -rf "$(yarn cache dir)"

# Then copy the rest of the backend bundle, along with any other files we might want.
COPY packages/backend/dist/bundle.tar.gz app-config.yaml ./
# We can update this later to use a script to create each yaml for each environment so we do not have an
# excessive maintenance burden from multiple copies (i.e. changing one thing requires changes in 5 files instead of 1)
COPY app-config.*.yaml ./
RUN tar xzf bundle.tar.gz && rm bundle.tar.gz

# Install VA certs
RUN DEBIAN_FRONTEND=noninteractive apt-get update && \
    apt-get install -y --no-install-recommends -o Dpkg::Options::="--force-confnew" ca-certificates && \
    apt-get clean

COPY ./certs/* /usr/local/share/ca-certificates

RUN openssl x509 -inform DER -in /usr/local/share/ca-certificates/VA-Internal-S2-ICA1-v1.cer -out /usr/local/share/ca-certificates/VA-Internal-S2-ICA1-v1.crt && \
    openssl x509 -inform DER -in /usr/local/share/ca-certificates/VA-Internal-S2-ICA2-v1.cer -out /usr/local/share/ca-certificates/VA-Internal-S2-ICA2-v1.crt && \
    openssl x509 -inform DER -in /usr/local/share/ca-certificates/VA-Internal-S2-ICA3-v1.cer -out /usr/local/share/ca-certificates/VA-Internal-S2-ICA3-v1.crt && \
    openssl x509 -inform DER -in /usr/local/share/ca-certificates/VA-Internal-S2-ICA4.cer -out /usr/local/share/ca-certificates/VA-Internal-S2-ICA4.crt && \
    openssl x509 -inform DER -in /usr/local/share/ca-certificates/VA-Internal-S2-ICA5.cer -out /usr/local/share/ca-certificates/VA-Internal-S2-ICA5.crt && \
    openssl x509 -inform DER -in /usr/local/share/ca-certificates/VA-Internal-S2-ICA6.cer -out /usr/local/share/ca-certificates/VA-Internal-S2-ICA6.crt && \
    openssl x509 -inform DER -in /usr/local/share/ca-certificates/VA-Internal-S2-ICA7.cer -out /usr/local/share/ca-certificates/VA-Internal-S2-ICA7.crt && \
    openssl x509 -inform DER -in /usr/local/share/ca-certificates/VA-Internal-S2-ICA8.cer -out /usr/local/share/ca-certificates/VA-Internal-S2-ICA8.crt && \
    openssl x509 -inform DER -in /usr/local/share/ca-certificates/VA-Internal-S2-ICA9.cer -out /usr/local/share/ca-certificates/VA-Internal-S2-ICA9.crt && \
    openssl x509 -inform DER -in /usr/local/share/ca-certificates/VA-Internal-S2-ICA10.cer -out /usr/local/share/ca-certificates/VA-Internal-S2-ICA10.crt && \
    openssl x509 -inform DER -in /usr/local/share/ca-certificates/VA-Internal-S2-RCA1-v1.cer -out /usr/local/share/ca-certificates/VA-Internal-S2-RCA1-v1.crt

RUN /usr/sbin/update-ca-certificates
ENV NODE_EXTRA_CA_CERTS /etc/ssl/certs/ca-certificates.crt

RUN chown -R 1000:1000 /app

USER 1000

CMD ["node", "packages/backend", "--config", "app-config.yaml", "--config", "app-config.production.yaml"]
