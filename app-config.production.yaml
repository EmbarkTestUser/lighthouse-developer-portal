app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin
  baseUrl: https://www.backhouselightstage.com

backend:
  baseUrl: https://www.backhouselightstage.com
  listen:
    port: ${PORT}
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  database:
    # config options: https://node-postgres.com/api/client
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
    # https://node-postgres.com/features/ssl
      #ssl: require # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
        #ca: # if you have a CA file and want to verify it you can uncomment this section
        #$file: <file-path>/ca/server.crt
auth:
  # see https://backstage.io/docs/tutorials/quickstart-app-auth to know more about enabling auth providers
  environment: development
  providers:
    github:
      development:
        clientId: ${AUTH_GITHUB_CLIENT_ID}
        clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}
catalog:
  processors:
    githubOrg:
      providers:
        - target: https://github.com
          apiBaseUrl: https://api.github.com
    visibility: public # or 'internal' or 'private'
  locations:
    - type: github-org
      target: https://github.com/titan-syndicate

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'external' # Alternatives - 'external'
  publisher:
    type: 'awsS3' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.
    awsS3:
      bucketName: ${TECHDOCS_S3_BUCKET_NAME}
      region: ${AWS_REGION}
      credentials:
        accessKeyId: ${AWS_ACCESS_KEY_ID}
        secretAccessKey: ${AWS_SECRET_ACCESS_KEY}